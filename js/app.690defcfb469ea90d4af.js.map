{"version":3,"sources":["webpack:///js/app.690defcfb469ea90d4af.js","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/shared/index.ts","webpack:///./src/app/shared/api.service.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.routes.ts","webpack:///./src/app/home/index.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/shared/networktables.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss"],"names":["webpackJsonp","0","module","exports","__webpack_require__","core_1","platform_browser_dynamic_1","http_1","app_component_1","app_routes_1","networktables_1","enableProdMode","bootstrap","AppComponent","HTTP_PROVIDERS","APP_ROUTER_PROVIDERS","NETWORKTABLES_SERVICE_PROVIDER","err","console","error","363","router_1","shared_1","api","this","url","__decorate","Component","selector","providers","ApiService","directives","ROUTER_DIRECTIVES","slice","template","styles","__metadata","_a","Object","417","__export","m","p","hasOwnProperty","418","title","prototype","getCamera","id","window","location","hostname","Injectable","419","423","424","425","home_1","routes","path","component","HomeComponent","provideRouter","426","427","api_service_1","ntService","statuses","statusList","statusName","auto_enabled","manual_exposure","target_count","target_angle","robotdrive_status","_statuses","camera_path","camera_status","ngOnInit","_this","listener","globalListener","subscribe","k","v","t","isNew","split","shift","__update_status","_i","length","i","_st","status","info","push","ngOnDestroy","unsubscribe","NetworkTablesService","_b","428","Observable_1","_globalListener","Observable","fromEventPattern","f","_wsListener","_robotListener","_robotStatus","_wsStatus","getInstance","instance","getValue","key","defaultValue","putValue","value","defineProperty","get","enumerable","configurable","provide","useFactory","430","431"],"mappings":"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","file":"js/app.690defcfb469ea90d4af.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(14);\r\n\tvar platform_browser_dynamic_1 = __webpack_require__(125);\r\n\tvar http_1 = __webpack_require__(342);\r\n\tvar app_component_1 = __webpack_require__(363);\r\n\tvar app_routes_1 = __webpack_require__(425);\r\n\tvar networktables_1 = __webpack_require__(428);\r\n\t// depending on the env mode, enable prod mode or add debugging modules\r\n\tif (true) {\r\n\t    core_1.enableProdMode();\r\n\t}\r\n\tplatform_browser_dynamic_1.bootstrap(app_component_1.AppComponent, [\r\n\t    // These are dependencies of our App\r\n\t    http_1.HTTP_PROVIDERS,\r\n\t    app_routes_1.APP_ROUTER_PROVIDERS,\r\n\t    networktables_1.NETWORKTABLES_SERVICE_PROVIDER\r\n\t])\r\n\t    .catch(function (err) { return console.error(err); });\r\n\n\n/***/ },\n\n/***/ 363:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(14);\r\n\tvar router_1 = __webpack_require__(364);\r\n\tvar shared_1 = __webpack_require__(417);\r\n\t__webpack_require__(419);\r\n\t/*\r\n\t * App Component\r\n\t * Top Level Component\r\n\t */\r\n\tvar AppComponent = (function () {\r\n\t    function AppComponent(api) {\r\n\t        this.api = api;\r\n\t        this.url = 'https://github.com/preboot/angular2-webpack';\r\n\t    }\r\n\t    AppComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-app',\r\n\t            providers: [shared_1.ApiService],\r\n\t            directives: router_1.ROUTER_DIRECTIVES.slice(),\r\n\t            template: __webpack_require__(423),\r\n\t            styles: [__webpack_require__(424)],\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [(typeof (_a = typeof shared_1.ApiService !== 'undefined' && shared_1.ApiService) === 'function' && _a) || Object])\r\n\t    ], AppComponent);\r\n\t    return AppComponent;\r\n\t    var _a;\r\n\t}());\r\n\texports.AppComponent = AppComponent;\r\n\n\n/***/ },\n\n/***/ 417:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(418));\r\n\n\n/***/ },\n\n/***/ 418:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(14);\r\n\tvar ApiService = (function () {\r\n\t    function ApiService() {\r\n\t        this.title = 'Zodiac 的视觉中枢';\r\n\t    }\r\n\t    ApiService.prototype.getCamera = function (id) {\r\n\t        switch (id) {\r\n\t            case 0:\r\n\t                return \"/stream.mjpg\";\r\n\t            case 1:\r\n\t                return \"http://\" + window.location.hostname + \":5805/?action=stream\";\r\n\t        }\r\n\t    };\r\n\t    ApiService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], ApiService);\r\n\t    return ApiService;\r\n\t}());\r\n\texports.ApiService = ApiService;\r\n\n\n/***/ },\n\n/***/ 419:\n944,\n\n/***/ 423:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<header>\\r\\n  <nav class=\\\"navbar navbar-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\">{{ api.title }}</a>\\r\\n  </nav>\\r\\n</header>\\r\\n<main>\\r\\n  <router-outlet></router-outlet>\\r\\n</main>\\r\\n\"\n\n/***/ },\n\n/***/ 424:\n/***/ function(module, exports) {\n\n\tmodule.exports = \":host{display:block}\\n\"\n\n/***/ },\n\n/***/ 425:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar router_1 = __webpack_require__(364);\r\n\tvar home_1 = __webpack_require__(426);\r\n\texports.routes = [\r\n\t    { path: '', component: home_1.HomeComponent }\r\n\t];\r\n\texports.APP_ROUTER_PROVIDERS = [\r\n\t    router_1.provideRouter(exports.routes)\r\n\t];\r\n\n\n/***/ },\n\n/***/ 426:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(427));\r\n\n\n/***/ },\n\n/***/ 427:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(14);\r\n\tvar networktables_1 = __webpack_require__(428);\r\n\tvar api_service_1 = __webpack_require__(418);\r\n\tvar HomeComponent = (function () {\r\n\t    function HomeComponent(ntService, api) {\r\n\t        this.ntService = ntService;\r\n\t        this.api = api;\r\n\t        this.statuses = [];\r\n\t        this.statusList = [\r\n\t            \"auto_enabled\",\r\n\t            \"manual_exposure\",\r\n\t            \"target_count\",\r\n\t            \"target_angle\",\r\n\t            \"robotdrive_status\"\r\n\t        ];\r\n\t        this.statusName = {\r\n\t            auto_enabled: \"自动瞄准\",\r\n\t            manual_exposure: \"手动曝光\",\r\n\t            target_count: \"目标\",\r\n\t            target_angle: \"角度\",\r\n\t            robotdrive_status: \"底盘\"\r\n\t        };\r\n\t        this._statuses = {};\r\n\t        this.camera_path = api.getCamera(0);\r\n\t        this.camera_status = 0;\r\n\t    }\r\n\t    HomeComponent.prototype.ngOnInit = function () {\r\n\t        var _this = this;\r\n\t        this.listener = this.ntService.globalListener.subscribe(function (_a) {\r\n\t            var k = _a.k, v = _a.v, isNew = _a.isNew;\r\n\t            var t = k.split('/');\r\n\t            t.shift();\r\n\t            if (t[0] == 'vision') {\r\n\t                _this._statuses[t[1]] = v;\r\n\t            }\r\n\t            _this.__update_status();\r\n\t        });\r\n\t    };\r\n\t    HomeComponent.prototype.__update_status = function () {\r\n\t        this.statuses = [];\r\n\t        for (var _i = 0, _a = this.statusList; _i < _a.length; _i++) {\r\n\t            var i = _a[_i];\r\n\t            if (i in this._statuses) {\r\n\t                var _st = {\r\n\t                    status: this._statuses[i],\r\n\t                    title: this.statusName[i],\r\n\t                    info: \"\"\r\n\t                };\r\n\t                switch (this._statuses[i]) {\r\n\t                    case 0:\r\n\t                        _st.info = \"已启用\";\r\n\t                        break;\r\n\t                    case 1:\r\n\t                        _st.info = \"正在调整\";\r\n\t                        break;\r\n\t                    case 2:\r\n\t                        _st.info = \"未启用\";\r\n\t                        break;\r\n\t                }\r\n\t                if (i == \"target_count\") {\r\n\t                    _st.info = \"发现\" + this._statuses[\"target_count_number\"] + \"个目标\";\r\n\t                }\r\n\t                if (i == \"target_angle\") {\r\n\t                    _st.info = \"距离\" + this._statuses[\"target_angle_number\"] + \"°\";\r\n\t                }\r\n\t                this.statuses.push(_st);\r\n\t            }\r\n\t        }\r\n\t        if (\"camera_id\" in this._statuses) {\r\n\t            this.camera_status = this._statuses[\"camera_id\"];\r\n\t            this.camera_path = this.api.getCamera(this._statuses[\"camera_id\"]);\r\n\t        }\r\n\t    };\r\n\t    HomeComponent.prototype.ngOnDestroy = function () {\r\n\t        this.listener.unsubscribe();\r\n\t    };\r\n\t    HomeComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-home',\r\n\t            template: __webpack_require__(430),\r\n\t            styles: [__webpack_require__(431)],\r\n\t            providers: [networktables_1.NETWORKTABLES_SERVICE_PROVIDER, api_service_1.ApiService]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [(typeof (_a = typeof networktables_1.NetworkTablesService !== 'undefined' && networktables_1.NetworkTablesService) === 'function' && _a) || Object, (typeof (_b = typeof api_service_1.ApiService !== 'undefined' && api_service_1.ApiService) === 'function' && _b) || Object])\r\n\t    ], HomeComponent);\r\n\t    return HomeComponent;\r\n\t    var _a, _b;\r\n\t}());\r\n\texports.HomeComponent = HomeComponent;\r\n\n\n/***/ },\n\n/***/ 428:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(14);\r\n\tvar Observable_1 = __webpack_require__(47);\r\n\t__webpack_require__(429);\r\n\tvar NetworkTablesService = (function () {\r\n\t    function NetworkTablesService() {\r\n\t        var _this = this;\r\n\t        this.ntService = new (window[\"NetworkTables\"])(\"ws://\" + window.location.hostname + \":5802/networktables/ws\");\r\n\t        this._globalListener = Observable_1.Observable.fromEventPattern(function (f) { return _this.ntService[\"addGlobalListener\"](f, true); }, function (f) { return _this.ntService[\"removeGlobalListener\"](f); });\r\n\t        this._wsListener = Observable_1.Observable.fromEventPattern(function (f) { return _this.ntService[\"addWsConnectionListener\"](f, true); }, function (f) { return _this.ntService[\"removeWsConnectionListener\"](f); });\r\n\t        this._robotListener = Observable_1.Observable.fromEventPattern(function (f) { return _this.ntService[\"addRobotConnectionListener\"](f, true); }, function (f) { return _this.ntService[\"removeRobotConnectionListener\"](f); });\r\n\t        this._robotListener.subscribe(function (status) { return _this._robotStatus = status; });\r\n\t        this._wsListener.subscribe(function (status) { return _this._wsStatus = status; });\r\n\t    }\r\n\t    NetworkTablesService.getInstance = function () {\r\n\t        if (NetworkTablesService.instance === null) {\r\n\t            NetworkTablesService.instance = new NetworkTablesService;\r\n\t        }\r\n\t        return NetworkTablesService.instance;\r\n\t    };\r\n\t    NetworkTablesService.prototype.getValue = function (key, defaultValue) {\r\n\t        return this.ntService[\"getValue\"](key, defaultValue);\r\n\t    };\r\n\t    NetworkTablesService.prototype.putValue = function (key, value) {\r\n\t        return this.ntService[\"putValue\"](key, value);\r\n\t    };\r\n\t    Object.defineProperty(NetworkTablesService.prototype, \"globalListener\", {\r\n\t        get: function () {\r\n\t            return this._globalListener;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(NetworkTablesService.prototype, \"wsListener\", {\r\n\t        get: function () {\r\n\t            return this._wsListener;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(NetworkTablesService.prototype, \"robotListener\", {\r\n\t        get: function () {\r\n\t            return this._robotListener;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(NetworkTablesService.prototype, \"robotStatus\", {\r\n\t        get: function () {\r\n\t            return this._robotStatus;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(NetworkTablesService.prototype, \"wsStatus\", {\r\n\t        get: function () {\r\n\t            return this._wsStatus;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    NetworkTablesService.instance = null;\r\n\t    NetworkTablesService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], NetworkTablesService);\r\n\t    return NetworkTablesService;\r\n\t}());\r\n\texports.NetworkTablesService = NetworkTablesService;\r\n\texports.NETWORKTABLES_SERVICE_PROVIDER = core_1.provide(NetworkTablesService, {\r\n\t    useFactory: function () { return NetworkTablesService.getInstance(); }\r\n\t});\r\n\n\n/***/ },\n\n/***/ 430:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"conatiner-fluid m-t-2 m-x-1\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card st-card-status\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          摄像头\\r\\n        </div>\\r\\n        <img class=\\\"st-camera\\\" [src]=\\\"camera_path\\\">\\r\\n        <div class=\\\"card-footer\\\" [ngClass]=\\\"{'bg-success': camera_status == 0, 'bg-info': camera_status == 1}\\\">\\r\\n          已绑定 -\\r\\n          <span *ngIf=\\\"camera_status == 0\\\">前置</span>\\r\\n          <span *ngIf=\\\"camera_status == 1\\\">后置</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card st-card-status\\\">\\r\\n        <div class=\\\"card-header\\\"\\r\\n          [ngClass]=\\\"{'bg-warning': !ntService.robotStatus && ntService.wsStatus, 'bg-info': !ntService.wsStatus}\\\">\\r\\n          <span *ngIf=\\\"!ntService.wsStatus\\\">未连接 - </span>\\r\\n          <span *ngIf=\\\"!ntService.robotStatus && ntService.wsStatus\\\">未连接到机器人 - </span>\\r\\n          <span *ngIf=\\\"ntService.robotStatus\\\">已连接 - </span>\\r\\n          视觉处理中心 (前部)\\r\\n        </div>\\r\\n        <ul class=\\\"list-group list-group-flush\\\">\\r\\n          <li class=\\\"list-group-item\\\"\\r\\n              [ngClass]=\\\"{'bg-success': status.status == 0, 'bg-warning': status.status == 2, 'bg-info': status.status == 1}\\\"\\r\\n              *ngFor=\\\"let status of statuses\\\">\\r\\n            <i class=\\\"fa fa-check fa-fw\\\" *ngIf=\\\"status.status == 0\\\"></i>\\r\\n            <i class=\\\"fa fa-circle-o-notch fa-spin fa-fw\\\" *ngIf=\\\"status.status == 1\\\"></i>\\r\\n            <i class=\\\"fa fa-exclamation fa-fw\\\" *ngIf=\\\"status.status == 2\\\"></i>\\r\\n            <span>{{ status.title }}</span>\\r\\n            <strong>{{ status.info }}</strong>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n/***/ },\n\n/***/ 431:\n/***/ function(module, exports) {\n\n\tmodule.exports = \".st-camera{width:100%;height:auto}.st-card-status .list-group-item{border-bottom-width:0 !important;border-top-width:0 !important}\\n\"\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** js/app.690defcfb469ea90d4af.js\n **/","import { enableProdMode } from '@angular/core';\r\nimport { bootstrap } from '@angular/platform-browser-dynamic';\r\nimport { HTTP_PROVIDERS } from '@angular/http';\r\n\r\nimport { AppComponent } from './app/app.component';\r\nimport { APP_ROUTER_PROVIDERS } from './app/app.routes';\r\nimport { NETWORKTABLES_SERVICE_PROVIDER } from './app/shared/networktables';\r\n\r\n// depending on the env mode, enable prod mode or add debugging modules\r\nif (process.env.ENV === 'build') {\r\n  enableProdMode();\r\n}\r\n\r\nbootstrap(AppComponent, [\r\n    // These are dependencies of our App\r\n    HTTP_PROVIDERS,\r\n    APP_ROUTER_PROVIDERS,\r\n    NETWORKTABLES_SERVICE_PROVIDER\r\n  ])\r\n  .catch(err => console.error(err));\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./~/tslint-loader!./src/main.ts\n **/","import { Component } from '@angular/core';\r\nimport { ROUTER_DIRECTIVES } from '@angular/router';\r\n\r\nimport { ApiService } from './shared';\r\n\r\nimport '../style/app.scss';\r\n\r\n/*\r\n * App Component\r\n * Top Level Component\r\n */\r\n@Component({\r\n  selector: 'my-app', // <my-app></my-app>\r\n  providers: [ApiService],\r\n  directives: [...ROUTER_DIRECTIVES],\r\n  template: require('./app.component.html'),\r\n  styles: [require('./app.component.scss')],\r\n})\r\nexport class AppComponent {\r\n  url = 'https://github.com/preboot/angular2-webpack';\r\n\r\n  constructor(private api: ApiService) {\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./~/tslint-loader!./src/app/app.component.ts\n **/","export * from './api.service';\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./~/tslint-loader!./src/app/shared/index.ts\n **/","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n  title = 'Zodiac 的视觉中枢';\r\n\r\n  public getCamera(id): string {\r\n    switch(id) {\r\n      case 0:\r\n        return \"/stream.mjpg\";\r\n      case 1:\r\n        return \"http://\" + window.location.hostname + \":5805/?action=stream\";\r\n    }\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./~/tslint-loader!./src/app/shared/api.service.ts\n **/","module.exports = \"<header>\\r\\n  <nav class=\\\"navbar navbar-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\">{{ api.title }}</a>\\r\\n  </nav>\\r\\n</header>\\r\\n<main>\\r\\n  <router-outlet></router-outlet>\\r\\n</main>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/app.component.html\n ** module id = 423\n ** module chunks = 0\n **/","module.exports = \":host{display:block}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/app.component.scss\n ** module id = 424\n ** module chunks = 0\n **/","import { provideRouter, RouterConfig } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home';\r\n\r\nexport const routes: RouterConfig = [\r\n  { path: '', component: HomeComponent }\r\n];\r\n\r\nexport const APP_ROUTER_PROVIDERS = [\r\n  provideRouter(routes)\r\n];\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./~/tslint-loader!./src/app/app.routes.ts\n **/","export * from './home.component';\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./~/tslint-loader!./src/app/home/index.ts\n **/","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NETWORKTABLES_SERVICE_PROVIDER, NetworkTablesService } from '../shared/networktables';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { ApiService } from '../shared/api.service';\r\n\r\n@Component({\r\n  selector: 'my-home',\r\n  template: require('./home.component.html'),\r\n  styles: [require('./home.component.scss')],\r\n  providers: [NETWORKTABLES_SERVICE_PROVIDER, ApiService]\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n  private statuses: any;\r\n  private statusList: any;\r\n  private statusName: {};\r\n  private _statuses: {};\r\n  private camera_path: string;\r\n  private camera_status: number;\r\n\r\n  constructor(\r\n    private ntService: NetworkTablesService,\r\n    private api: ApiService\r\n  ) {\r\n    this.statuses = [];\r\n    this.statusList = [\r\n      \"auto_enabled\",\r\n      \"manual_exposure\",\r\n      \"target_count\",\r\n      \"target_angle\",\r\n      \"robotdrive_status\"\r\n    ]\r\n    this.statusName = {\r\n      auto_enabled: \"自动瞄准\",\r\n      manual_exposure: \"手动曝光\",\r\n      target_count: \"目标\",\r\n      target_angle: \"角度\",\r\n      robotdrive_status: \"底盘\"\r\n    }\r\n    this._statuses = {}\r\n    this.camera_path = api.getCamera(0);\r\n    this.camera_status = 0;\r\n  }\r\n  \r\n  private listener: any;\r\n\r\n  ngOnInit() {\r\n    this.listener = this.ntService.globalListener.subscribe(({k, v, isNew}) => {\r\n      let t = k.split('/'); t.shift();\r\n      if (t[0] == 'vision') {\r\n        this._statuses[t[1]] = v;\r\n      }\r\n      this.__update_status();\r\n    });\r\n  }\r\n  private __update_status() {\r\n    this.statuses = [];\r\n    for (let i of this.statusList) {\r\n      if (i in this._statuses) {\r\n        let _st = {\r\n          status: this._statuses[i],\r\n          title: this.statusName[i],\r\n          info: \"\"\r\n        }\r\n        switch(this._statuses[i]) {\r\n          case 0:\r\n            _st.info = \"已启用\";\r\n            break;\r\n          case 1:\r\n            _st.info = \"正在调整\";\r\n            break;\r\n          case 2:\r\n            _st.info = \"未启用\";\r\n            break;\r\n        }\r\n        if (i == \"target_count\") {\r\n          _st.info = \"发现\" + this._statuses[\"target_count_number\"] + \"个目标\";\r\n        }\r\n        if (i == \"target_angle\") {\r\n          _st.info = \"距离\" + this._statuses[\"target_angle_number\"] + \"°\";\r\n        }\r\n        this.statuses.push(_st);\r\n      }\r\n    }\r\n    if (\"camera_id\" in this._statuses) {\r\n      this.camera_status = this._statuses[\"camera_id\"];\r\n      this.camera_path = this.api.getCamera(this._statuses[\"camera_id\"]);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.listener.unsubscribe();\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./~/tslint-loader!./src/app/home/home.component.ts\n **/","import { Injectable, provide } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport '../../../vendor/networktables';\r\n\r\n@Injectable()\r\nexport class NetworkTablesService {\r\n  private static instance: any = null;\r\n  public static getInstance(): any {\r\n    if (NetworkTablesService.instance === null) {\r\n       NetworkTablesService.instance = new NetworkTablesService;\r\n    }\r\n    return NetworkTablesService.instance;\r\n  }\r\n\r\n  private ntService: any;\r\n  private isConnected: boolean;\r\n\r\n  constructor(\r\n  ) {\r\n    this.ntService = new (window[\"NetworkTables\"])(\"ws://\" + window.location.hostname + \":5802/networktables/ws\")\r\n    this._globalListener = Observable.fromEventPattern(\r\n      f => this.ntService[\"addGlobalListener\"](f, true),\r\n      f => this.ntService[\"removeGlobalListener\"](f)\r\n    );\r\n    this._wsListener = Observable.fromEventPattern(\r\n      f => this.ntService[\"addWsConnectionListener\"](f, true),\r\n      f => this.ntService[\"removeWsConnectionListener\"](f)\r\n    );\r\n    this._robotListener = Observable.fromEventPattern(\r\n      f => this.ntService[\"addRobotConnectionListener\"](f, true),\r\n      f => this.ntService[\"removeRobotConnectionListener\"](f)\r\n    );\r\n\r\n    this._robotListener.subscribe(status => this._robotStatus = status);\r\n    this._wsListener.subscribe(status => this._wsStatus = status);\r\n  }\r\n\r\n  private _globalListener: any;\r\n  private _wsListener: any;\r\n  private _robotListener: any;\r\n\r\n  private _robotStatus: boolean;\r\n  private _wsStatus: boolean;\r\n\r\n  public getValue(key, defaultValue): any {\r\n    return this.ntService[\"getValue\"](key, defaultValue);\r\n  }\r\n\r\n  public putValue(key, value): any {\r\n    return this.ntService[\"putValue\"](key, value);\r\n  }\r\n\r\n  get globalListener(): Observable<any> {\r\n    return this._globalListener;\r\n  }\r\n\r\n  get wsListener(): Observable<any> {\r\n    return this._wsListener;\r\n  }\r\n\r\n  get robotListener(): Observable<any> {\r\n    return this._robotListener;\r\n  }\r\n\r\n  get robotStatus(): boolean {\r\n    return this._robotStatus;\r\n  }\r\n\r\n  get wsStatus(): boolean {\r\n    return this._wsStatus;\r\n  }\r\n}\r\n\r\nexport const NETWORKTABLES_SERVICE_PROVIDER = provide(NetworkTablesService, {\r\n  useFactory: (): NetworkTablesService => NetworkTablesService.getInstance()\r\n});\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./~/tslint-loader!./src/app/shared/networktables.ts\n **/","module.exports = \"<div class=\\\"conatiner-fluid m-t-2 m-x-1\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card st-card-status\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          摄像头\\r\\n        </div>\\r\\n        <img class=\\\"st-camera\\\" [src]=\\\"camera_path\\\">\\r\\n        <div class=\\\"card-footer\\\" [ngClass]=\\\"{'bg-success': camera_status == 0, 'bg-info': camera_status == 1}\\\">\\r\\n          已绑定 -\\r\\n          <span *ngIf=\\\"camera_status == 0\\\">前置</span>\\r\\n          <span *ngIf=\\\"camera_status == 1\\\">后置</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card st-card-status\\\">\\r\\n        <div class=\\\"card-header\\\"\\r\\n          [ngClass]=\\\"{'bg-warning': !ntService.robotStatus && ntService.wsStatus, 'bg-info': !ntService.wsStatus}\\\">\\r\\n          <span *ngIf=\\\"!ntService.wsStatus\\\">未连接 - </span>\\r\\n          <span *ngIf=\\\"!ntService.robotStatus && ntService.wsStatus\\\">未连接到机器人 - </span>\\r\\n          <span *ngIf=\\\"ntService.robotStatus\\\">已连接 - </span>\\r\\n          视觉处理中心 (前部)\\r\\n        </div>\\r\\n        <ul class=\\\"list-group list-group-flush\\\">\\r\\n          <li class=\\\"list-group-item\\\"\\r\\n              [ngClass]=\\\"{'bg-success': status.status == 0, 'bg-warning': status.status == 2, 'bg-info': status.status == 1}\\\"\\r\\n              *ngFor=\\\"let status of statuses\\\">\\r\\n            <i class=\\\"fa fa-check fa-fw\\\" *ngIf=\\\"status.status == 0\\\"></i>\\r\\n            <i class=\\\"fa fa-circle-o-notch fa-spin fa-fw\\\" *ngIf=\\\"status.status == 1\\\"></i>\\r\\n            <i class=\\\"fa fa-exclamation fa-fw\\\" *ngIf=\\\"status.status == 2\\\"></i>\\r\\n            <span>{{ status.title }}</span>\\r\\n            <strong>{{ status.info }}</strong>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/home/home.component.html\n ** module id = 430\n ** module chunks = 0\n **/","module.exports = \".st-camera{width:100%;height:auto}.st-card-status .list-group-item{border-bottom-width:0 !important;border-top-width:0 !important}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/home/home.component.scss\n ** module id = 431\n ** module chunks = 0\n **/"],"sourceRoot":""}